version: 2.1
jobs:
  static-analysis:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xms512m -Xmx3072m
      GRADLE_OPTS: -Xmx1536m -XX +HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}-{{ checksum "buildSrc/src/main/kotlin/Dependencies.kt" }}
      - run:
          name: Accept Android licenses
          command: sdkmanager --licenses
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}-{{ checksum "buildSrc/src/main/kotlin/Dependencies.kt" }}
      - run:
          name: Run ktlint
          command: ./gradlew ktlintCheck
      - run:
          name: Run detekt
          command: ./gradlew detekt
      - store_artifacts:
          path: app/build/reports
          destination: build/reports

  build:
    parameters:
      variant:
        type: string
        description: The variant to assemble.
    working_directory: ~/code
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xms512m -Xmx3072m
      GRADLE_OPTS: -Xmx1536m -XX +HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}-{{ checksum "buildSrc/src/main/kotlin/Dependencies.kt" }}
      - run:
          name: Accept Android licenses
          command: sdkmanager --licenses
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}-{{ checksum "buildSrc/src/main/kotlin/Dependencies.kt" }}
      - run:
          name: Run Build
          command: ./gradlew :app:assemble<< parameters.variant>>
      - store_artifacts:
          path: app/build/outputs/apk
          destination: build/outputs/apk

  unit-tests:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xms512m -Xmx3072m
      GRADLE_OPTS: -Xmx1536m -XX +HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}-{{ checksum "buildSrc/src/main/kotlin/Dependencies.kt" }}
      - run:
          name: Accept Android licenses
          command: sdkmanager --licenses
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}-{{ checksum "buildSrc/src/main/kotlin/Dependencies.kt" }}
      - run:
          name: Run Unit Tests
          command: ./gradlew :app:testDebugUnitTest
      - store_test_results:
          path: app/build/test-results
      - store_artifacts:
          path: app/build/reports/tests/testDebugUnitTest
          destination: build/reports/tests/testDebugUnitTest

workflows:
  build-test:
    jobs:
      - static-analysis
      - unit-tests
      - build:
          name: build-debug
          variant: Debug
      - build:
          name: build-release
          variant: Release
